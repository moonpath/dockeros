#!/bin/sh
### BEGIN INIT INFO
# Provides:          pulseaudio
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start pulseaudio at boot time
# Description:       Enable pulseaudio sound server daemon.
### END INIT INFO

PATH="/bin:/usr/bin:/sbin:/usr/sbin"
DESC="PulseAudio sound server"
NAME="pulseaudio"
DAEMON="/usr/bin/pulseaudio"
DAEMONOPTS="--start --disallow-exit --exit-idle-time=-1"
PIDFILE="/var/run/pulseaudio.pid"
SCRIPTNAME="/etc/init.d/$NAME"
EXEUSER="admin"

. /lib/lsb/init-functions

case "$1" in
    start)
        log_daemon_msg "Starting service" "$NAME"
        # Check if already running
        if [ -f "$PIDFILE" ] && kill -0 $(cat "$PIDFILE") 2>/dev/null; then
            log_end_msg 0
            exit 0
        fi
        # Start the daemon
        start-stop-daemon --start --background --user $EXEUSER --chuid $EXEUSER --exec $DAEMON -- $DAEMONOPTS
        # Wait a moment for the process to start
        sleep 1
        # Find the actual pulseaudio process PID and write it to pidfile
        pgrep -u $EXEUSER -xf "$DAEMON $DAEMONOPTS" > $PIDFILE 2>/dev/null
        if [ -s "$PIDFILE" ]; then
            log_end_msg 0
        else
            log_end_msg 1
        fi
        ;;
    stop)
        log_daemon_msg "Stopping service" "$NAME"
        if [ -f "$PIDFILE" ]; then
            start-stop-daemon --stop --quiet --oknodo --retry 30 --pidfile $PIDFILE
        fi
        # Ensure cleanup with pkill as backup
        pkill -u $EXEUSER -xf "$DAEMON $DAEMONOPTS" 2>/dev/null || true
        rm -f "$PIDFILE"
        log_end_msg 0
        ;;
    restart)
        log_daemon_msg "Restarting service" "$NAME"
        $0 stop
        sleep 1
        $0 start
        ;;
    status)
        if [ -f "$PIDFILE" ]; then
            PID=$(cat "$PIDFILE")
            if kill -0 "$PID" 2>/dev/null; then
                echo "$NAME is running (PID: $PID)"
                exit 0
            else
                echo "$NAME is not running but PID file exists"
                exit 1
            fi
        else
            # Check if process is running without PID file
            if pgrep -u $EXEUSER -xf "$DAEMON $DAEMONOPTS" > /dev/null 2>&1; then
                echo "$NAME is running but PID file is missing"
                exit 0
            else
                echo "$NAME is not running"
                exit 3
            fi
        fi
        ;;
    *)
        echo "Usage: $0 {start|stop|status|restart}"
        exit 1
        ;;
esac
exit 0
